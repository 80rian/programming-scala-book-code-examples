<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE preface PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<preface id="foreword" role="foreword">
  <prefaceinfo>
    <author>
      <firstname>Jonas</firstname>

      <surname>Bonér</surname>

      <affiliation>
        <jobtitle>Independent Consultant, Scalable Solutions AB</jobtitle>
      </affiliation>
    </author>

    <date>August, 2009</date>
  </prefaceinfo>

  <title>Foreword</title>

  <para>If there has been a common theme throughout my career as a programmer,
  it has been the quest for better abstractions and better tools to support
  the craft of writing software. During the years, I have come to value one
  trait more than any other: composability. If one can write code with good
  composability, it usually means that other traits we software developers
  value—such as orthogonality, loose coupling, and high cohesion—are already
  present. It is all connected.</para>

  <para>When I discovered Scala some years ago, the thing that made the
  biggest impression on me was its composability. Through some very elegant
  design choices and simple yet powerful abstractions that were taken from the
  Object-Oriented and Functional Programming worlds, Martin Odersky has
  managed to create a language with high cohesion and orthogonal, deep
  abstractions that invites composability in all dimensions of software
  design. Scala is truly a SCAlable LAnguage that scales with usage, from
  scripting all the way up to large-scale enterprise applications and
  middleware. Scala was born out of academia, but it has grown into a
  pragmatic and practical language that is very much ready for real-world
  production use.</para>

  <para>What excites me most about this book is that it’s so practical. Dean
  and Alex have done a fantastic job, not only by explaining the language
  through interesting discussions and samples, but also by putting it in the
  context of the real world. Itʼs written for the programmer who wants to get
  things done. I had the pleasure of getting to know Dean some years ago when
  we were both part of the aspect-oriented programming community. Dean holds a
  rare mix of deep analytical academic thinking and a pragmatic,
  get-things-done kind of mentality. Alex, whom I’ve had the pleasure to meet
  once, is leading the API team at Twitter, Inc. Alex has played a leading
  role in moving Twitter’s code and infrastructure to Scala, making it one on
  the first companies to successfully deploy Scala in production.</para>

  <para>You are about to learn how to write reusable components using mixin
  and function composition; how to write concurrent applications using Scala’s
  actors; how to make effective use of Scala’s XML/XPath support; how to
  utilize Scalaʼs rich, flexible, and expressive syntax to build
  Domain-Specific Languages; how to effectively test your Scala code; how to
  use Scala with popular frameworks such as Spring, Hadoop, and Terracotta;
  and much, much more. Enjoy the ride. I sure did.</para>
</preface>